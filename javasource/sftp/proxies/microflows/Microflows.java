// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sftp.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the SFTP module
	public static boolean afterStartup(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("SFTP.AfterStartup").withParams(params).execute(context);
	}
	public static boolean bCo_Key(IContext context, sftp.proxies.Key _key)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Key", _key == null ? null : _key.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("SFTP.BCo_Key").withParams(params).execute(context);
	}
	public static sftp.proxies.Configuration createConfiguration(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("SFTP.CreateConfiguration").withParams(params).execute(context);
		return result == null ? null : sftp.proxies.Configuration.initialize(context, result);
	}
	public static java.util.List<sftp.proxies.RemoteFile> dS_GetContents(IContext context, sftp.proxies.Explore _explore)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explore", _explore == null ? null : _explore.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("SFTP.DS_GetContents").withParams(params).execute(context);
		java.util.List<sftp.proxies.RemoteFile> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(sftp.proxies.RemoteFile.initialize(context, obj));
		}
		return result;
	}
	public static sftp.proxies.Key dS_GetGeneralKey(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("SFTP.DS_GetGeneralKey").withParams(params).execute(context);
		return result == null ? null : sftp.proxies.Key.initialize(context, result);
	}
	public static void iVK_ChangeKey(IContext context, sftp.proxies.Key _key)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Key", _key == null ? null : _key.getMendixObject());
		Core.microflowCall("SFTP.IVK_ChangeKey").withParams(params).execute(context);
	}
	public static void iVK_ConfirmHostkey(IContext context, sftp.proxies.HostKey _hostKey)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("HostKey", _hostKey == null ? null : _hostKey.getMendixObject());
		Core.microflowCall("SFTP.IVK_ConfirmHostkey").withParams(params).execute(context);
	}
	public static void iVK_CreateConfiguration(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("SFTP.IVK_CreateConfiguration").withParams(params).execute(context);
	}
	public static void iVK_DeleteConfiguration(IContext context, sftp.proxies.Configuration _configuration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Configuration", _configuration == null ? null : _configuration.getMendixObject());
		Core.microflowCall("SFTP.IVK_DeleteConfiguration").withParams(params).execute(context);
	}
	public static void iVK_GenerateKeyPair(IContext context, sftp.proxies.GenerateNewKeyPair _generateNewKeyPair)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("GenerateNewKeyPair", _generateNewKeyPair == null ? null : _generateNewKeyPair.getMendixObject());
		Core.microflowCall("SFTP.IVK_GenerateKeyPair").withParams(params).execute(context);
	}
	public static void iVK_GenerateKeyPairRequest(IContext context, sftp.proxies.Key _key)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Key", _key == null ? null : _key.getMendixObject());
		Core.microflowCall("SFTP.IVK_GenerateKeyPairRequest").withParams(params).execute(context);
	}
	public static void iVK_MkDir(IContext context, sftp.proxies.MkDirRequest _mkDirRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MkDirRequest", _mkDirRequest == null ? null : _mkDirRequest.getMendixObject());
		Core.microflowCall("SFTP.IVK_MkDir").withParams(params).execute(context);
	}
	public static void iVK_ObtainHostkey(IContext context, sftp.proxies.Configuration _configuration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Configuration", _configuration == null ? null : _configuration.getMendixObject());
		Core.microflowCall("SFTP.IVK_ObtainHostkey").withParams(params).execute(context);
	}
	public static void iVK_Open(IContext context, sftp.proxies.RemoteFile _remoteFile, sftp.proxies.Explore _explore)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("RemoteFile", _remoteFile == null ? null : _remoteFile.getMendixObject());
		params.put("Explore", _explore == null ? null : _explore.getMendixObject());
		Core.microflowCall("SFTP.IVK_Open").withParams(params).execute(context);
	}
	public static void iVK_OpenExplorer(IContext context, sftp.proxies.Configuration _configuration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Configuration", _configuration == null ? null : _configuration.getMendixObject());
		Core.microflowCall("SFTP.IVK_OpenExplorer").withParams(params).execute(context);
	}
	public static void iVK_OpenMkDir(IContext context, sftp.proxies.Explore _explore)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explore", _explore == null ? null : _explore.getMendixObject());
		Core.microflowCall("SFTP.IVK_OpenMkDir").withParams(params).execute(context);
	}
	public static void iVK_OpenRename(IContext context, sftp.proxies.Explore _explore, sftp.proxies.RemoteFile _remoteFile)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explore", _explore == null ? null : _explore.getMendixObject());
		params.put("RemoteFile", _remoteFile == null ? null : _remoteFile.getMendixObject());
		Core.microflowCall("SFTP.IVK_OpenRename").withParams(params).execute(context);
	}
	public static void iVK_OpenUpload(IContext context, sftp.proxies.Explore _explore)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explore", _explore == null ? null : _explore.getMendixObject());
		Core.microflowCall("SFTP.IVK_OpenUpload").withParams(params).execute(context);
	}
	public static void iVK_Put(IContext context, sftp.proxies.Explore _explore, sftp.proxies.ExplorerFile _explorerFile)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explore", _explore == null ? null : _explore.getMendixObject());
		params.put("ExplorerFile", _explorerFile == null ? null : _explorerFile.getMendixObject());
		Core.microflowCall("SFTP.IVK_Put").withParams(params).execute(context);
	}
	public static void iVK_Remove(IContext context, sftp.proxies.RemoteFile _remoteFile)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("RemoteFile", _remoteFile == null ? null : _remoteFile.getMendixObject());
		Core.microflowCall("SFTP.IVK_Remove").withParams(params).execute(context);
	}
	public static void iVK_Rename(IContext context, sftp.proxies.RenameRequest _renameRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("RenameRequest", _renameRequest == null ? null : _renameRequest.getMendixObject());
		Core.microflowCall("SFTP.IVK_Rename").withParams(params).execute(context);
	}
	public static void iVK_SaveConfiguration(IContext context, sftp.proxies.Configuration _configuration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Configuration", _configuration == null ? null : _configuration.getMendixObject());
		Core.microflowCall("SFTP.IVK_SaveConfiguration").withParams(params).execute(context);
	}
	public static void iVK_SaveContents(IContext context, sftp.proxies.ExplorerFile _explorerFile)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ExplorerFile", _explorerFile == null ? null : _explorerFile.getMendixObject());
		Core.microflowCall("SFTP.IVK_SaveContents").withParams(params).execute(context);
	}
	public static void iVK_TestConfiguration(IContext context, sftp.proxies.Configuration _configuration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Configuration", _configuration == null ? null : _configuration.getMendixObject());
		Core.microflowCall("SFTP.IVK_TestConfiguration").withParams(params).execute(context);
	}
	public static void iVK_ValidateKey(IContext context, sftp.proxies.Key _key)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Key", _key == null ? null : _key.getMendixObject());
		Core.microflowCall("SFTP.IVK_ValidateKey").withParams(params).execute(context);
	}
	public static void iVK_ViewContents(IContext context, sftp.proxies.RemoteFile _remoteFile, sftp.proxies.Explore _explore)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("RemoteFile", _remoteFile == null ? null : _remoteFile.getMendixObject());
		params.put("Explore", _explore == null ? null : _explore.getMendixObject());
		Core.microflowCall("SFTP.IVK_ViewContents").withParams(params).execute(context);
	}
	public static void pollRemoteDirectory(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("SFTP.PollRemoteDirectory").withParams(params).execute(context);
	}
	public static boolean saveConfiguration(IContext context, sftp.proxies.Configuration _configuration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Configuration", _configuration == null ? null : _configuration.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("SFTP.SaveConfiguration").withParams(params).execute(context);
	}
	public static sftp.proxies.ExplorerFile sFTP_Get(IContext context, sftp.proxies.RemoteFile _remoteFile)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("RemoteFile", _remoteFile == null ? null : _remoteFile.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("SFTP.SFTP_Get").withParams(params).execute(context);
		return result == null ? null : sftp.proxies.ExplorerFile.initialize(context, result);
	}
	public static void sFTP_MkDir(IContext context, sftp.proxies.MkDirRequest _mkDirRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MkDirRequest", _mkDirRequest == null ? null : _mkDirRequest.getMendixObject());
		Core.microflowCall("SFTP.SFTP_MkDir").withParams(params).execute(context);
	}
	public static sftp.proxies.Explore sFTP_Open(IContext context, sftp.proxies.Explore _explore)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explore", _explore == null ? null : _explore.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("SFTP.SFTP_Open").withParams(params).execute(context);
		return result == null ? null : sftp.proxies.Explore.initialize(context, result);
	}
	public static void sFTP_PollRemoteDirectory(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("SFTP.SFTP_PollRemoteDirectory").withParams(params).execute(context);
	}
	public static void sFTP_Put(IContext context, sftp.proxies.Explore _explore)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explore", _explore == null ? null : _explore.getMendixObject());
		Core.microflowCall("SFTP.SFTP_Put").withParams(params).execute(context);
	}
	public static void sFTP_Remove(IContext context, sftp.proxies.RemoteFile _remoteFile)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("RemoteFile", _remoteFile == null ? null : _remoteFile.getMendixObject());
		Core.microflowCall("SFTP.SFTP_Remove").withParams(params).execute(context);
	}
	public static void sFTP_Rename(IContext context, sftp.proxies.RenameRequest _renameRequest)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("RenameRequest", _renameRequest == null ? null : _renameRequest.getMendixObject());
		Core.microflowCall("SFTP.SFTP_Rename").withParams(params).execute(context);
	}
	public static void sFTP_SaveContents(IContext context, sftp.proxies.Explore _explore)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explore", _explore == null ? null : _explore.getMendixObject());
		Core.microflowCall("SFTP.SFTP_SaveContents").withParams(params).execute(context);
	}
	public static sftp.proxies.Configuration sFTP_TestConnection(IContext context, sftp.proxies.Configuration _configuration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Configuration", _configuration == null ? null : _configuration.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("SFTP.SFTP_TestConnection").withParams(params).execute(context);
		return result == null ? null : sftp.proxies.Configuration.initialize(context, result);
	}
	public static sftp.proxies.ExplorerFile sFTP_ViewContents(IContext context, sftp.proxies.RemoteFile _remoteFile)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("RemoteFile", _remoteFile == null ? null : _remoteFile.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("SFTP.SFTP_ViewContents").withParams(params).execute(context);
		return result == null ? null : sftp.proxies.ExplorerFile.initialize(context, result);
	}
	public static boolean validate_Configuration(IContext context, sftp.proxies.Configuration _configuration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Configuration", _configuration == null ? null : _configuration.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("SFTP.Validate_Configuration").withParams(params).execute(context);
	}
}