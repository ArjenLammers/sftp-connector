// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sftp.proxies;

public class RemoteFile
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject remoteFileMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SFTP.RemoteFile";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Path("Path"),
		Name("Name"),
		LastModificationDate("LastModificationDate"),
		FileType("FileType"),
		Size("Size"),
		RemoteFile_Explore("SFTP.RemoteFile_Explore");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public RemoteFile(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SFTP.RemoteFile"));
	}

	protected RemoteFile(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject remoteFileMendixObject)
	{
		if (remoteFileMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("SFTP.RemoteFile", remoteFileMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SFTP.RemoteFile");

		this.remoteFileMendixObject = remoteFileMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'RemoteFile.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static sftp.proxies.RemoteFile initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return sftp.proxies.RemoteFile.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static sftp.proxies.RemoteFile initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new sftp.proxies.RemoteFile(context, mendixObject);
	}

	public static sftp.proxies.RemoteFile load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return sftp.proxies.RemoteFile.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Path
	 */
	public final java.lang.String getPath()
	{
		return getPath(getContext());
	}

	/**
	 * @param context
	 * @return value of Path
	 */
	public final java.lang.String getPath(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Path.toString());
	}

	/**
	 * Set value of Path
	 * @param path
	 */
	public final void setPath(java.lang.String path)
	{
		setPath(getContext(), path);
	}

	/**
	 * Set value of Path
	 * @param context
	 * @param path
	 */
	public final void setPath(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String path)
	{
		getMendixObject().setValue(context, MemberNames.Path.toString(), path);
	}

	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of LastModificationDate
	 */
	public final java.util.Date getLastModificationDate()
	{
		return getLastModificationDate(getContext());
	}

	/**
	 * @param context
	 * @return value of LastModificationDate
	 */
	public final java.util.Date getLastModificationDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.LastModificationDate.toString());
	}

	/**
	 * Set value of LastModificationDate
	 * @param lastmodificationdate
	 */
	public final void setLastModificationDate(java.util.Date lastmodificationdate)
	{
		setLastModificationDate(getContext(), lastmodificationdate);
	}

	/**
	 * Set value of LastModificationDate
	 * @param context
	 * @param lastmodificationdate
	 */
	public final void setLastModificationDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date lastmodificationdate)
	{
		getMendixObject().setValue(context, MemberNames.LastModificationDate.toString(), lastmodificationdate);
	}

	/**
	 * Set value of FileType
	 * @param filetype
	 */
	public final sftp.proxies.FileType getFileType()
	{
		return getFileType(getContext());
	}

	/**
	 * @param context
	 * @return value of FileType
	 */
	public final sftp.proxies.FileType getFileType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.FileType.toString());
		if (obj == null)
			return null;

		return sftp.proxies.FileType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of FileType
	 * @param filetype
	 */
	public final void setFileType(sftp.proxies.FileType filetype)
	{
		setFileType(getContext(), filetype);
	}

	/**
	 * Set value of FileType
	 * @param context
	 * @param filetype
	 */
	public final void setFileType(com.mendix.systemwideinterfaces.core.IContext context, sftp.proxies.FileType filetype)
	{
		if (filetype != null)
			getMendixObject().setValue(context, MemberNames.FileType.toString(), filetype.toString());
		else
			getMendixObject().setValue(context, MemberNames.FileType.toString(), null);
	}

	/**
	 * @return value of Size
	 */
	public final java.lang.Long getSize()
	{
		return getSize(getContext());
	}

	/**
	 * @param context
	 * @return value of Size
	 */
	public final java.lang.Long getSize(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.Size.toString());
	}

	/**
	 * Set value of Size
	 * @param size
	 */
	public final void setSize(java.lang.Long size)
	{
		setSize(getContext(), size);
	}

	/**
	 * Set value of Size
	 * @param context
	 * @param size
	 */
	public final void setSize(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long size)
	{
		getMendixObject().setValue(context, MemberNames.Size.toString(), size);
	}

	/**
	 * @return value of RemoteFile_Explore
	 */
	public final sftp.proxies.Explore getRemoteFile_Explore() throws com.mendix.core.CoreException
	{
		return getRemoteFile_Explore(getContext());
	}

	/**
	 * @param context
	 * @return value of RemoteFile_Explore
	 */
	public final sftp.proxies.Explore getRemoteFile_Explore(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		sftp.proxies.Explore result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RemoteFile_Explore.toString());
		if (identifier != null)
			result = sftp.proxies.Explore.load(context, identifier);
		return result;
	}

	/**
	 * Set value of RemoteFile_Explore
	 * @param remotefile_explore
	 */
	public final void setRemoteFile_Explore(sftp.proxies.Explore remotefile_explore)
	{
		setRemoteFile_Explore(getContext(), remotefile_explore);
	}

	/**
	 * Set value of RemoteFile_Explore
	 * @param context
	 * @param remotefile_explore
	 */
	public final void setRemoteFile_Explore(com.mendix.systemwideinterfaces.core.IContext context, sftp.proxies.Explore remotefile_explore)
	{
		if (remotefile_explore == null)
			getMendixObject().setValue(context, MemberNames.RemoteFile_Explore.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.RemoteFile_Explore.toString(), remotefile_explore.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return remoteFileMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final sftp.proxies.RemoteFile that = (sftp.proxies.RemoteFile) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SFTP.RemoteFile";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
