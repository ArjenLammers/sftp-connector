// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sftp.proxies;

public class Key extends system.proxies.FileDocument
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SFTP.Key";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Fingerprint("Fingerprint"),
		PassPhrase("PassPhrase"),
		Purpose("Purpose"),
		PublicKey("PublicKey"),
		Valid("Valid"),
		ValidationMessage("ValidationMessage"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size"),
		Configuration_Key("SFTP.Configuration_Key");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Key(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SFTP.Key"));
	}

	protected Key(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject keyMendixObject)
	{
		super(context, keyMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("SFTP.Key", keyMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SFTP.Key");
	}

	/**
	 * @deprecated Use 'Key.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static sftp.proxies.Key initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return sftp.proxies.Key.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static sftp.proxies.Key initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new sftp.proxies.Key(context, mendixObject);
	}

	public static sftp.proxies.Key load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return sftp.proxies.Key.initialize(context, mendixObject);
	}

	public static java.util.List<sftp.proxies.Key> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<sftp.proxies.Key> result = new java.util.ArrayList<sftp.proxies.Key>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SFTP.Key" + xpathConstraint))
			result.add(sftp.proxies.Key.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of Fingerprint
	 */
	public final java.lang.String getFingerprint()
	{
		return getFingerprint(getContext());
	}

	/**
	 * @param context
	 * @return value of Fingerprint
	 */
	public final java.lang.String getFingerprint(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Fingerprint.toString());
	}

	/**
	 * Set value of Fingerprint
	 * @param fingerprint
	 */
	public final void setFingerprint(java.lang.String fingerprint)
	{
		setFingerprint(getContext(), fingerprint);
	}

	/**
	 * Set value of Fingerprint
	 * @param context
	 * @param fingerprint
	 */
	public final void setFingerprint(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String fingerprint)
	{
		getMendixObject().setValue(context, MemberNames.Fingerprint.toString(), fingerprint);
	}

	/**
	 * @return value of PassPhrase
	 */
	public final java.lang.String getPassPhrase()
	{
		return getPassPhrase(getContext());
	}

	/**
	 * @param context
	 * @return value of PassPhrase
	 */
	public final java.lang.String getPassPhrase(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PassPhrase.toString());
	}

	/**
	 * Set value of PassPhrase
	 * @param passphrase
	 */
	public final void setPassPhrase(java.lang.String passphrase)
	{
		setPassPhrase(getContext(), passphrase);
	}

	/**
	 * Set value of PassPhrase
	 * @param context
	 * @param passphrase
	 */
	public final void setPassPhrase(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String passphrase)
	{
		getMendixObject().setValue(context, MemberNames.PassPhrase.toString(), passphrase);
	}

	/**
	 * Set value of Purpose
	 * @param purpose
	 */
	public final sftp.proxies.KeyPurpose getPurpose()
	{
		return getPurpose(getContext());
	}

	/**
	 * @param context
	 * @return value of Purpose
	 */
	public final sftp.proxies.KeyPurpose getPurpose(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Purpose.toString());
		if (obj == null)
			return null;

		return sftp.proxies.KeyPurpose.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Purpose
	 * @param purpose
	 */
	public final void setPurpose(sftp.proxies.KeyPurpose purpose)
	{
		setPurpose(getContext(), purpose);
	}

	/**
	 * Set value of Purpose
	 * @param context
	 * @param purpose
	 */
	public final void setPurpose(com.mendix.systemwideinterfaces.core.IContext context, sftp.proxies.KeyPurpose purpose)
	{
		if (purpose != null)
			getMendixObject().setValue(context, MemberNames.Purpose.toString(), purpose.toString());
		else
			getMendixObject().setValue(context, MemberNames.Purpose.toString(), null);
	}

	/**
	 * @return value of PublicKey
	 */
	public final java.lang.String getPublicKey()
	{
		return getPublicKey(getContext());
	}

	/**
	 * @param context
	 * @return value of PublicKey
	 */
	public final java.lang.String getPublicKey(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PublicKey.toString());
	}

	/**
	 * Set value of PublicKey
	 * @param publickey
	 */
	public final void setPublicKey(java.lang.String publickey)
	{
		setPublicKey(getContext(), publickey);
	}

	/**
	 * Set value of PublicKey
	 * @param context
	 * @param publickey
	 */
	public final void setPublicKey(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String publickey)
	{
		getMendixObject().setValue(context, MemberNames.PublicKey.toString(), publickey);
	}

	/**
	 * @return value of Valid
	 */
	public final java.lang.Boolean getValid()
	{
		return getValid(getContext());
	}

	/**
	 * @param context
	 * @return value of Valid
	 */
	public final java.lang.Boolean getValid(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Valid.toString());
	}

	/**
	 * Set value of Valid
	 * @param valid
	 */
	public final void setValid(java.lang.Boolean valid)
	{
		setValid(getContext(), valid);
	}

	/**
	 * Set value of Valid
	 * @param context
	 * @param valid
	 */
	public final void setValid(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean valid)
	{
		getMendixObject().setValue(context, MemberNames.Valid.toString(), valid);
	}

	/**
	 * @return value of ValidationMessage
	 */
	public final java.lang.String getValidationMessage()
	{
		return getValidationMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of ValidationMessage
	 */
	public final java.lang.String getValidationMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ValidationMessage.toString());
	}

	/**
	 * Set value of ValidationMessage
	 * @param validationmessage
	 */
	public final void setValidationMessage(java.lang.String validationmessage)
	{
		setValidationMessage(getContext(), validationmessage);
	}

	/**
	 * Set value of ValidationMessage
	 * @param context
	 * @param validationmessage
	 */
	public final void setValidationMessage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String validationmessage)
	{
		getMendixObject().setValue(context, MemberNames.ValidationMessage.toString(), validationmessage);
	}

	/**
	 * @return value of Configuration_Key
	 */
	public final sftp.proxies.Configuration getConfiguration_Key() throws com.mendix.core.CoreException
	{
		return getConfiguration_Key(getContext());
	}

	/**
	 * @param context
	 * @return value of Configuration_Key
	 */
	public final sftp.proxies.Configuration getConfiguration_Key(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		sftp.proxies.Configuration result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Configuration_Key.toString());
		if (identifier != null)
			result = sftp.proxies.Configuration.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Configuration_Key
	 * @param configuration_key
	 */
	public final void setConfiguration_Key(sftp.proxies.Configuration configuration_key)
	{
		setConfiguration_Key(getContext(), configuration_key);
	}

	/**
	 * Set value of Configuration_Key
	 * @param context
	 * @param configuration_key
	 */
	public final void setConfiguration_Key(com.mendix.systemwideinterfaces.core.IContext context, sftp.proxies.Configuration configuration_key)
	{
		if (configuration_key == null)
			getMendixObject().setValue(context, MemberNames.Configuration_Key.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Configuration_Key.toString(), configuration_key.getMendixObject().getId());
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final sftp.proxies.Key that = (sftp.proxies.Key) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SFTP.Key";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
