// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package librarylogging.actions;

import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.core.Appender;
import org.apache.logging.log4j.core.LoggerContext;
import org.apache.logging.log4j.core.appender.ConsoleAppender;
import org.apache.logging.log4j.core.config.Configuration;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

public class InitializeLogging extends CustomJavaAction<java.lang.Boolean>
{
	public InitializeLogging(IContext context)
	{
		super(context);
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		LoggerContext ctx = (LoggerContext) LogManager.getContext(false);
		Configuration config = ctx.getConfiguration();
		
		// remove all logging to console
		Map<String, Appender> appenders = new HashMap<>();
		appenders.putAll(config.getRootLogger().getAppenders());
		for (Entry<String, Appender> appenderEntry : appenders.entrySet()) {
			if (appenderEntry.getValue() instanceof ConsoleAppender) {
				config.getRootLogger().removeAppender(appenderEntry.getKey());
			}
		}
		ctx.updateLoggers();
		
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "InitializeLogging";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
